/**
 * 一.防抖和节流
 * 防抖:多次操作变成一次(只执行最后一次)
 * ..一定时间内,事件只允许发生一次
 * 节流:保证一定时间内只调用处理函数( 控制执行次数 )
 * ..一定时间内的多个变为一个（高频的监听事件）
 * */
function fandou(fn) {
  let timer = null;
  return function () {
    if (timer !== null) {
      clearTimeout(timer);
    }
    timer = setTimeout(() => {
      fn();
    }, 500);
  };
}
function debance(fn) {
  let target = true;
  return function () {
    if (target) {
      setTimeout(() => {
        fn();
        target = true;
      });
    }
    target = false;
  };
}

/**
 * 二.闭包的补充
 * 创建私有属性
 * 延长变量的生命周期
 *
 * vue中的data()
 * 通过闭包给每个组件,创建了一个私有域空间
 * 各个组件都有一个私有的作用域
 *
 */

/**
 *  三.js的事件循环机制
 *  js是单线程的, 一个任务结束之后才能执行下一个
 *  执行顺序:同步任务->process.nextTick->微任务->宏任务->setlmmediate
 *
 */

/**
 *  四.js的冒泡和捕获
 *  事件捕获阶段
 *  事件捕获与事件冒泡刚好相反，事件会从最外层开始发生，依次触发，直到最具体的元素，这就是事件捕获
 *  事件目标阶段
 *  js中事件会以冒泡的形式由内到外的向上传递。由最内层点击元素向外扩散到最外层元素，激活外层元素注册的相应事件，这就是事件冒泡。
 *  事件冒泡阶段
 */

/**
 *  五.项目优化
 *  1.减少http请求(雪碧图的使用)
 *  2.ssR服务端渲染(server side render...)
 *  理解:由后端渲染带有数据的html页面
 *  .提高首页加载的速度;
 *  .利于搜索引擎seo优化;
 *  3.cdn方式引入(第三方库),减少文件体积
 *  4.压缩文件(图片、css、js)
 *  5.懒加载
 *  理解:可视区域是有限的,图片懒加载,
 *  */

/**
 *  六.发布订阅模式
 */
